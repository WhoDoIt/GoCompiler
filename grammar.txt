program     -> (declaration)* EOF 

declaration -> varDecl | statement

varDecl     -> "var" variable "=" expression ";"
funcDecl    -> "fn" IDENTIFIER "(" parameter? ")" block
parameter   -> IDENTIFIER ("," IDENTIFIER)*
# variable    -> IDENTIFIER

statement   -> exprStmt | printStmt | ifstmt | forStmt | block

forStmt     -> "for" "(" varDecl expression ";" expression ")" statement
ifstmt      -> "if" "(" expression ")" statement
block       -> "{" declaration* "}"

exprStmt    -> expression ";"
printStmt   -> "print" expression ";"

expression  -> assignment
assignment  -> IDENTIFIER "=" expression | bitwise
bitwise     -> equality (("|" | "&") equality)*
equality    -> comparison (("==" | "!=") comparison)*
comparison  -> term ((">" | "<" | ">=" | "<=") term)*
term        -> factor (("+" | "-") factor)*
factor      -> unary (("/" | "*") unary)*
unary       -> ("!" | "-") unary | call
call        -> primary ("(" argument? ")")*
primary     -> IDENTIFIER | STRING | NUMBER | "(" expression ")"
argument    -> expression ("," expression)*